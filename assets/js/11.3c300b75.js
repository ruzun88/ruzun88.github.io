(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{367:function(_,v,a){"use strict";a.r(v);var t=a(42),r=Object(t.a)({},(function(){var _=this,v=_.$createElement,a=_._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("h2",{attrs:{id:"_1장-설계와-아키텍처란"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1장-설계와-아키텍처란"}},[_._v("#")]),_._v(" 1장. 설계와 아키텍처란?")]),_._v(" "),a("ul",[a("li",[_._v("소프트 웨어 아키텍처의 목표 :"),a("br"),_._v("\n필요한 시스템을 만들고 유지보수하는데 투입되는 인력을 최소화 하는 것")])]),_._v(" "),a("h4",{attrs:{id:"_1-1-사례-연구"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-사례-연구"}},[_._v("#")]),_._v(" 1.1 사례 연구")]),_._v(" "),a("ul",[a("li",[_._v("개발자가 늘어날 수록, 단위시간당 인당 코드 라인 수는 줄어들었다.")]),_._v(" "),a("li",[_._v("코드 라인당 비용이 출시 이후 시간이 지남에 따라, 기하급수적으로 늘어난다.")]),_._v(" "),a("li",[_._v("생산성이 낮아지고, 비용은 높아지는 것")])]),_._v(" "),a("h4",{attrs:{id:"_1-2-lesson-learned"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-lesson-learned"}},[_._v("#")]),_._v(" 1.2 Lesson Learned")]),_._v(" "),a("ul",[a("li",[_._v("토끼와 거북이의 이야기. 느려도 꾸준하면 이긴다.")]),_._v(" "),a("li",[_._v("'코드는 나중에 정리해도 돼. 지금은 출시가 우선!' 이라는 거짓에 속아넘어가지 말자")]),_._v(" "),a("li",[a("strong",[_._v("'지저분한 코드를 작성하면 단기간에는 빠르게 갈 수 있고, 장기적으로 볼 때만 생산성이 낮아진다'")]),_._v(" 는 것은 거짓이다."),a("br"),_._v("\nTDD를 적용한 날이 더 빠르게 작업이 진행되었다는 결과도 있다.")])]),_._v(" "),a("h4",{attrs:{id:"_1-3-결론"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-결론"}},[_._v("#")]),_._v(" 1.3 결론")]),_._v(" "),a("ul",[a("li",[_._v("끊임없이 SW 아키텍처의 품질을 고민하기 시작해야 한다.")])]),_._v(" "),a("br"),_._v(" "),a("h2",{attrs:{id:"_2장-두-가지-가치에-대한-이야기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2장-두-가지-가치에-대한-이야기"}},[_._v("#")]),_._v(" 2장. 두 가지 가치에 대한 이야기")]),_._v(" "),a("ul",[a("li",[_._v("모든 소프트 웨어 시스템은 "),a("strong",[_._v("'행위'")]),_._v(" 와 "),a("strong",[_._v("'구조'")]),_._v(" 의 가치를 제공해야 한다.")]),_._v(" "),a("li",[_._v("일반적으로 둘 중 한가지 가치에만 집중하는 경향이 있다.")])]),_._v(" "),a("h4",{attrs:{id:"_2-1-행위"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-행위"}},[_._v("#")]),_._v(" 2.1 행위")]),_._v(" "),a("ul",[a("li",[_._v("요구사항을 만족하는 프로그램을 만드는 가치")]),_._v(" "),a("li",[_._v("대부분의 프로그래머가 이 "),a("strong",[_._v("행위")]),_._v(" 자체를 자신의 일 전부라고 착각한다.")])]),_._v(" "),a("h4",{attrs:{id:"_2-2-아키텍처"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-아키텍처"}},[_._v("#")]),_._v(" 2.2 아키텍처")]),_._v(" "),a("ul",[a("li",[_._v("이해관계자가 기능에 대한 생각을 바꾸었을 때, 변경사항을 간단하고 쉽게 적용할 수 있게 만드는 것.")]),_._v(" "),a("li",[_._v("scope는 변할 수 있어도, 제품의 shape과는 관계가 없어야 한다.")])]),_._v(" "),a("h4",{attrs:{id:"_2-3-더-높은-가치"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-더-높은-가치"}},[_._v("#")]),_._v(" 2.3 더 높은 가치")]),_._v(" "),a("ul",[a("li",[_._v("관리자는 기능이 돌아가는게 중요하지, 아키텍처는 부수적인 것이라고 말한다.")]),_._v(" "),a("li",[_._v("Who is the Winner?"),a("br"),_._v("\n완벽하게 동작하지만, 수정이 아예 불가능 vs. 동작을 못해도 변경이 쉬운 프로그램"),a("br"),_._v("\n저자는 명백하게 "),a("strong",[_._v("후자")]),_._v(" 라고 말하고 있음")]),_._v(" "),a("li",[_._v("중요한 가치에 힘을 실어 주자.\n"),a("ul",[a("li",[_._v("아키텍처는 긴급하고 중요하거나 긴급하진 않으나 중요한 가치이다.")]),_._v(" "),a("li",[_._v("행위는 긴급하고 중요하거나, 중요하진 않지만 긴급한 가치이다.")])])]),_._v(" "),a("li",[_._v("아키텍처를 위해 투쟁해야 한다. 아키텍처가 후순위가 되는 순간 시스템 개발 비용이 많아지고, 변경이 불가해진다.")])]),_._v(" "),a("br"),_._v(" "),a("h2",{attrs:{id:"_3장-패러다임-개요"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3장-패러다임-개요"}},[_._v("#")]),_._v(" 3장. 패러다임 개요")]),_._v(" "),a("h4",{attrs:{id:"_3-1-구조적-프로그래밍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-구조적-프로그래밍"}},[_._v("#")]),_._v(" 3.1 구조적 프로그래밍")]),_._v(" "),a("ul",[a("li",[_._v("최초로 적용된 패러다임")]),_._v(" "),a("li",[_._v("구조적 프로그래밍은 제어흐름의 직접적 전환에 규칙을 부과한다.")])]),_._v(" "),a("h4",{attrs:{id:"_3-2-객체지향-프로그래밍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-객체지향-프로그래밍"}},[_._v("#")]),_._v(" 3.2 객체지향 프로그래밍")]),_._v(" "),a("ul",[a("li",[_._v("클래스의 생성자 / 인스턴스 변수 / 메서드를 활용한다.")]),_._v(" "),a("li",[_._v("제어흐름의 간접적인 전환에 대해 규칙을 부과한다.")])]),_._v(" "),a("h4",{attrs:{id:"_3-3-함수형-프로그래밍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-함수형-프로그래밍"}},[_._v("#")]),_._v(" 3.3 함수형 프로그래밍")]),_._v(" "),a("ul",[a("li",[_._v("최근에 들어서야 겨우 도입되기 시작")]),_._v(" "),a("li",[_._v("람다 계산법!")]),_._v(" "),a("li",[_._v("함수형 프로그래밍은 할당문에 대해 규칙을 부과한다.")])]),_._v(" "),a("h4",{attrs:{id:"_3-4-생각할-거리"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-생각할-거리"}},[_._v("#")]),_._v(" 3.4 생각할 거리")]),_._v(" "),a("ul",[a("li",[_._v("패러다임은 프로그래머에게서 마음대로 할 권한을 박탈하고, 규칙을 부과함.")])]),_._v(" "),a("br"),_._v(" "),a("h2",{attrs:{id:"_4장-구조적-프로그래밍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4장-구조적-프로그래밍"}},[_._v("#")]),_._v(" 4장. 구조적 프로그래밍")]),_._v(" "),a("ul",[a("li",[_._v("프로그램은 순차/분기/반복 세가지 구조로 표현할 수도 있다.")]),_._v(" "),a("li",[_._v("테스트는 버그가 있음을 보여줄 뿐, 버그가 없음을 보여줄 수는 없다.")]),_._v(" "),a("li",[a("strong",[_._v("구조적 프로그래밍은 프로그램을 증명 가능한 세부 기능 집합으로 재귀적 분해하고자 한다.")])])]),_._v(" "),a("br"),_._v(" "),a("h2",{attrs:{id:"_5장-객체-지향-프로그래밍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5장-객체-지향-프로그래밍"}},[_._v("#")]),_._v(" 5장. 객체 지향 프로그래밍")]),_._v(" "),a("ul",[a("li",[_._v("좋은 아키텍처의 출발")]),_._v(" "),a("li",[_._v("캡슐화 / 상속 / 다형성")]),_._v(" "),a("li",[_._v("다형성이 가진 힘: 모듈의 독립성을 유지할 수 있음")])]),_._v(" "),a("h4",{attrs:{id:"_5-1-의존성-역전-dependency-inversion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-의존성-역전-dependency-inversion"}},[_._v("#")]),_._v(" 5.1 의존성 역전 (Dependency inversion)")]),_._v(" "),a("ul",[a("li",[_._v("기존의 제어흐름은 main에서 하위 함수를 순차 호출하는 것"),a("br"),_._v("\n따라서, 소스 코드 의존성이 제어흐름에 따라 결정되었음")]),_._v(" "),a("li",[_._v("다형성이 끼어들면서, 이 구조가 뒤바뀌기도 함! 런타임시에 다양한 녀석을 가지고 올 수 있게 된 것.")])]),_._v(" "),a("h4",{attrs:{id:"_5-4-결론"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-결론"}},[_._v("#")]),_._v(" 5.4 결론")]),_._v(" "),a("ul",[a("li",[_._v("다형성을 이용하여 전체 시스템의 모든 소스코드 의존성에 대한 절댖3ㅓㄱ인 제어권한을 획득할 수 있는 능력이 필요하다.")])]),_._v(" "),a("br"),_._v(" "),a("h2",{attrs:{id:"_6장-함수형-프로그래밍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6장-함수형-프로그래밍"}},[_._v("#")]),_._v(" 6장. 함수형 프로그래밍")]),_._v(" "),a("ul",[a("li",[_._v("핵심 기반: 람다 계산법")]),_._v(" "),a("li",[_._v("함수형 언어에서, 변수는 변경되지 않는다.")])]),_._v(" "),a("h4",{attrs:{id:"_6-1-불변성과-아키텍처"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-불변성과-아키텍처"}},[_._v("#")]),_._v(" 6.1 불변성과 아키텍처")]),_._v(" "),a("ul",[a("li",[_._v("경합조건, 교착상태, 동시 업데이트 문제가 가변 변수로 인해 발생하지만, 변수 변경이 없다면 일어나지 않는 문제.")])])])}),[],!1,null,null,null);v.default=r.exports}}]);