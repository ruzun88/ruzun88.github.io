"use strict";(self.webpackChunkruzun_docs=self.webpackChunkruzun_docs||[]).push([[897],{2334:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-736cd736",path:"/en/vue/vuepress/beautify-config.html",title:"How to refactor Configs",lang:"en-US",frontmatter:{lang:"en-US",title:"How to refactor Configs",description:"This page is for vuepress config refactoring",tags:["vuepress","vuepress config"]},excerpt:"",headers:[{level:2,title:"Just Follow Along",slug:"just-follow-along",children:[]},{level:2,title:"Failed Logs",slug:"failed-logs",children:[]}],filePathRelative:"en/vue/vuepress/beautify-config.md",git:{updatedTime:1634137115e3,contributors:[{name:"yongjun",email:"ruzun88@gmail.com",commits:1}]}}},7901:(s,n,a)=>{a.r(n),a.d(n,{default:()=>p});const e=(0,a(6252).uE)('<h1 id="how-to-refactor-complex-configs" tabindex="-1"><a class="header-anchor" href="#how-to-refactor-complex-configs" aria-hidden="true">#</a> How to refactor complex configs?</h1><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>When you use Vuepress for a long time, Configs get more dirty.<br> Hundreds of lines will make you confused...<br> It&#39;s really hard to read, to recognize, and also hard to change configs. This page tells you how to manage your configuration with multi files.</p></div><p><strong>After</strong> refactor your <code>Config</code>, your <code>config.js</code> may similar to this.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> themeLocales <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./config/themeLocales&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> locales <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./config/locales&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> head <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./config/inHeadTag&#39;</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  locales<span class="token operator">:</span> locales<span class="token punctuation">,</span>\n  head<span class="token operator">:</span> head<span class="token punctuation">,</span>\n  themeConfig<span class="token operator">:</span> <span class="token punctuation">{</span>\n    logo<span class="token operator">:</span> <span class="token string">&#39;https://vuejs.org/images/logo.png&#39;</span><span class="token punctuation">,</span>\n    locales<span class="token operator">:</span> themeLocales<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="just-follow-along" tabindex="-1"><a class="header-anchor" href="#just-follow-along" aria-hidden="true">#</a> Just Follow Along</h2><ol><li>In <code>.vuepress</code> folder, make <code>config</code> folder.</li><li>In <code>config.js</code> file, you need to decide which part would be refactored. (In this page, I gonna use <code>locales</code>.)<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  locales<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">&#39;/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      lang<span class="token operator">:</span> <span class="token string">&#39;ko-KR&#39;</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">&#39;ruzun devlog&#39;</span><span class="token punctuation">,</span>\n      description<span class="token operator">:</span> <span class="token string">&#39;Vue 문서&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string">&#39;/en/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      lang<span class="token operator">:</span> <span class="token string">&#39;en-US&#39;</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">&#39;ruzun devlog&#39;</span><span class="token punctuation">,</span>\n      description<span class="token operator">:</span> <span class="token string">&#39;Vue-powered Static Site Generator&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token operator">...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></li><li>In <code>config</code> Folder, make <code>locales.js</code> file.</li><li>Open <code>locales.js</code> file, and move codes you selected.<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// anything you want to configure</span>\n  <span class="token string">&#39;/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    lang<span class="token operator">:</span> <span class="token string">&#39;ko-KR&#39;</span><span class="token punctuation">,</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;ruzun devlog&#39;</span><span class="token punctuation">,</span>\n    description<span class="token operator">:</span> <span class="token string">&#39;Vue 문서&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;/en/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    lang<span class="token operator">:</span> <span class="token string">&#39;en-US&#39;</span><span class="token punctuation">,</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;ruzun devlog&#39;</span><span class="token punctuation">,</span>\n    description<span class="token operator">:</span> <span class="token string">&#39;Vue-powered Static Site Generator&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></li><li>Go back to <code>config.js</code> file, and modify your code like this.<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> locales <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./config/locales&#39;</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  locales<span class="token operator">:</span> locales\n  <span class="token operator">...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li></ol><h2 id="failed-logs" tabindex="-1"><a class="header-anchor" href="#failed-logs" aria-hidden="true">#</a> Failed Logs</h2><p>Conceptually, it is very simple to refactor configs.<br> Just refactor configs like normal code lines<br> But, you should remind these two.</p><ol><li>each separated file config shoule return with <code>module.exports</code><br> At first, I made my configs with function, and tried with <code>export default</code>.<br> But I failed with this exception...<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Unexpected token &#39;export&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>I googled, and found the reason. In vuepress, it seems not properly work with es6. (If wrong, let me know.)</li><li>You should you <code>require</code>, not <code>import</code>.<br> if you use <code>import</code>, you may see this exception.<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>SyntaxError: Cannot use import statement outside a module\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>It might be same issue (ES5 / ES6)</li></ol><p>Hope this helps you. thanks</p><p>#vuepress #vue #vuepress-config #vuepress-refactoring</p>',11),o={},p=(0,a(3744).Z)(o,[["render",function(s,n){return e}]])},3744:(s,n)=>{n.Z=(s,n)=>{for(const[a,e]of n)s[a]=e;return s}}}]);